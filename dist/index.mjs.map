{"version":3,"sources":["../src/defaults.ts","../src/utils/createRemClamp.ts","../src/utils/typedKeys.ts","../src/buenTypeTailwind.ts"],"sourcesContent":["import { TypeDefinitionHeadlines, TypeDefinitionTexts } from \"./types\";\n\n/**\n * Default headline object\n */\nexport const DEFAULT_HEADLINE: TypeDefinitionHeadlines = {\n  \"display-xxl\": {\n    _id: \"headline-display-xxl\",\n    classAlias: [\"main-headline\"],\n    fontWeight: \"bold\",\n    clamp: [6, 12],\n    letterSpacing: \"-0.05em\",\n  },\n  \"display-xl\": {\n    _id: \"headline-display-xl\",\n    fontWeight: \"bold\",\n    clamp: [4.5, 9],\n    letterSpacing: \"-0.05em\",\n  },\n  \"display-lg\": {\n    _id: \"headline-display-lg\",\n    fontWeight: \"bold\",\n    clamp: [3.5, 5],\n    letterSpacing: \"-0.05em\",\n    lineHeight: 1,\n  },\n  \"display-md\": {\n    _id: \"headline-display-md\",\n    fontWeight: \"bold\",\n    clamp: [3, 4],\n    letterSpacing: \"-0.05em\",\n    lineHeight: 1,\n  },\n  \"display-sm\": {\n    _id: \"headline-display-sm\",\n    fontWeight: \"bold\",\n    clamp: [1.5, 2],\n    letterSpacing: \"-0.05em\",\n    lineHeight: 1,\n  },\n  \"display-xs\": {\n    _id: \"headline-display-xs\",\n    fontWeight: \"bold\",\n    clamp: [1, 1],\n    letterSpacing: \"-0em\",\n    lineHeight: 1,\n  },\n};\n\n/**\n * Default text object\n */\nexport const DEFAULT_TEXT: TypeDefinitionTexts = {\n  title: {\n    _id: \"text-title\",\n    fontSize: \"1.5rem\",\n    lineHeight: 1.25,\n    fontWeight: \"normal\",\n    letterSpacing: \"0em\",\n  },\n  paragraph: {\n    _id: \"text-paragraph\",\n    fontSize: \"1.25rem\",\n    lineHeight: 1.35,\n    fontWeight: \"normal\",\n    letterSpacing: \"0em\",\n  },\n  string: {\n    _id: \"text-string\",\n    fontSize: \".9rem\",\n    lineHeight: 1.25,\n    fontWeight: \"normal\",\n    letterSpacing: \"0em\",\n  },\n  body: {\n    _id: \"text-body\",\n    fontSize: \"0.8rem\",\n    lineHeight: 1.25,\n    fontWeight: \"normal\",\n    letterSpacing: \"0em\",\n  },\n  caption: {\n    _id: \"text-caption\",\n    fontSize: \"0.65rem\",\n    lineHeight: 1.25,\n    fontWeight: \"normal\",\n    letterSpacing: \"0em\",\n  },\n};\n","/**\n * A module that provides a function to create a `rem`-based `clamp` function.\n *\n * @param minFontSize - The minimum font size in rem\n * @param maxFontSize - The maximum font size in rem\n * @param minScreenSize - The minimum screen size in pixels\n * @param maxScreenSize - The maximum screen size in pixels\n */\nexport function createRemClamp(\n  minFontSize: number,\n  maxFontSize: number,\n  minScreenSize: number = 1024,\n  maxScreenSize: number = 1440,\n): string {\n  const minWidth = minScreenSize / 16;\n  const maxWidth = maxScreenSize / 16;\n  const m = (maxFontSize - minFontSize) / (maxWidth - minWidth);\n  const b = -minWidth * m + minFontSize;\n\n  return `clamp(${minFontSize}rem, ${b}rem + ${m * 100}vw, ${maxFontSize}rem)`;\n}\n","export function typedKeys<T extends object>(obj: T): (keyof T)[] {\n  return Object.keys(obj) as (keyof T)[];\n}\n","import { DEFAULT_HEADLINE, DEFAULT_TEXT } from \"./defaults\";\nimport { CustomTypeDefinitions, TypeDefinition } from \"./types\";\nimport { createRemClamp } from \"./utils/createRemClamp\";\nimport { typedKeys } from \"./utils/typedKeys\";\n\ntype AddUtilities = {\n  (utilities: Record<string, any>, options?: any): void;\n};\n\n/**\n * A module that converts an object of headlines and text definitions into Tailwind CSS utilities.\n *\n * @todo Explore making minScreenSize and maxScreenSize configurable in createRemClamp\n * @todo Make addUtilities a named parameter, importing @tailwindcss/types\n * @todo Make return type more specific to what tailwind plugins expect\n */\nexport function buenTypeTailwind(\n  { addUtilities }: { addUtilities: AddUtilities },\n  options?: CustomTypeDefinitions,\n): void {\n  const generateStyles = (definition: TypeDefinition) => {\n    let styles: TypeDefinition = {\n      fontFamily: definition.fontFamily,\n      fontWeight: definition.fontWeight,\n      lineHeight: definition.lineHeight,\n      letterSpacing: definition.letterSpacing,\n      textTransform: definition.textTransform,\n      fontSize: definition.fontSize,\n      fontStyle: definition.fontStyle,\n      textDecoration: definition.textDecoration,\n      textShadow: definition.textShadow,\n      whiteSpace: definition.whiteSpace,\n      wordSpacing: definition.wordSpacing,\n      textOverflow: definition.textOverflow,\n      direction: definition.direction,\n      writingMode: definition.writingMode,\n      textRendering: definition.textRendering,\n      hyphens: definition.hyphens,\n    };\n    if (definition.fontSize) {\n      styles.fontSize = definition.fontSize;\n    }\n    if (definition.clamp) {\n      const customMinScreenSize = options?.customMinScreenSize || 1024;\n      const customMaxScreenSize = options?.customMaxScreenSize || 1440;\n      styles.fontSize = createRemClamp(\n        definition.clamp[0],\n        definition.clamp[1],\n        customMinScreenSize,\n        customMaxScreenSize,\n      );\n    }\n\n    return styles;\n  };\n\n  /**\n   * @todo Look into using deepmerge to merge the default and custom definitions\n   */\n\n  const defaultHeadlines = options?.disableDefaults ? null : DEFAULT_HEADLINE;\n  const mergedHeadlines = {\n    ...defaultHeadlines,\n    ...options?.customHeadlines,\n  };\n\n  const defaultTexts = options?.disableDefaults ? null : DEFAULT_TEXT;\n  const mergedTexts = { ...defaultTexts, ...options?.customTexts };\n\n  let headlineUtilities: Record<string, any> = {};\n  typedKeys(mergedHeadlines).forEach((key) => {\n    const style = mergedHeadlines[key];\n    if (style) {\n      headlineUtilities[`.headline-${key}`] = generateStyles(style);\n      if (style.classAlias) {\n        style.classAlias.forEach((alias) => {\n          headlineUtilities[`.${alias}`] = generateStyles(style);\n        });\n      }\n    }\n  });\n\n  let textUtilities: Record<string, any> = {};\n  typedKeys(mergedTexts).forEach((key) => {\n    const style = mergedTexts[key];\n    if (style) {\n      textUtilities[`.text-${key}`] = generateStyles(style);\n      if (style.classAlias) {\n        style.classAlias.forEach((alias) => {\n          textUtilities[`.text-${alias}`] = generateStyles(style);\n        });\n      }\n    }\n  });\n\n  addUtilities(headlineUtilities);\n  addUtilities(textUtilities);\n}\n"],"mappings":"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","names":[]}